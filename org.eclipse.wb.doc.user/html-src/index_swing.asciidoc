= Swing Designer User Guide

*Swing Designer* is a powerful and easy to use bi-directional Java GUI
designer that makes it very easy to create Java GUI applications without
spending a lot of time writing code to display simple forms. With *Swing
Designer* you can create complicated windows in minutes. Use the
xref:userinterface/design_view.adoc[visual designer] and
xref:userinterface/source_view.adoc[Java code] will be generated for
you. You can easily add controls using drag-and-drop, add
xref:features/event_handling.adoc[event handlers] to your controls,
change various properties of controls using a
xref:userinterface/property_pane.adoc[property editor],
xref:features/internationalization.adoc[internationalize] your app
and much more.

*Swing Designer* builds an abstract syntax tree (AST) to navigate the
source code and uses http://www.eclipse.org/gef/[GEF] to display and
manage the visual presentation. Using WYSIWYG layout tools, you don't
need to write any lines of java code - the code will be generated for
you by *Swing Designer*.

You can easily add any component to a container by using drag-and-drop,
add an xref:features/event_handling.adoc[event handler] to your
controls, change various properties of controls using property editors
and much more. Generated code doesn't require any additional custom
libraries to compile and run: all of the generated code can be used
without having *Swing Designer* installed. *Swing Designer* can read and
write almost any format and reverse-engineer most hand-written Java GUI
code. It also supports free form code editing (make changes
anywhere...not just in _special_ areas) and most user refactorings (you
can move, rename and subdivide methods without a problem).

The editor is composed of the following major
xref:userinterface/index.adoc[user interface] components:

* *xref:userinterface/design_view.adoc[Design View]* - the main visual
layout area.
* *xref:userinterface/source_view.adoc[Source View]* - write code and
review the generated code
* *xref:userinterface/structure_view.adoc[Structure View]* - composed of
the *Component Tree* and the *Property Pane.*
** *xref:userinterface/component_tree.adoc[Component Tree]* - shows the
hierarchical relationship between all of the components.
** *xref:userinterface/property_pane.adoc[Property Pane]* - displays
properties and events of the selected components.
* *xref:userinterface/palette.adoc[Palette]* - provides quick access to
toolkit-specific components.
* *xref:userinterface/toolbar.adoc[Toolbar]* - provides access to
commonly used commands.
* *xref:userinterface/context_menu.adoc[Context Menu]* - provides access
to commonly used commands.

The editor also offers the following xref:features/index.adoc[major
features]:

* *xref:features/bidirectional.adoc[Bi-directional Code Generation] -*
read and write almost any format and reverse-engineer most hand-written
code
* *xref:features/internationalization.adoc[Internationalization (i18n) /
Localization] -* externalize component strings, create and manage
resource bundles.
* *xref:features/custom_composites.adoc[Custom Composites & Panels]* -
create custom, reusable components.
* *xref:features/factories.adoc[Factories]* - create custom factory
classes and methods.
* *xref:features/visual_inheritance.adoc[Visual Inheritance]* - create
visual component hierarchies.
* *xref:features/event_handling.adoc[Event Handling]* - add event
handlers to your components.
* *xref:features/menu_editing.adoc[Menu Editing]* - visually create and
edit menubars, menu items and popup menus.
* *xref:features/morphing.adoc[Morphing]* - convert one component type
into another.

*Powered by Eclipse Technology +
Copyright © 2003, 2014 Google, Inc. All rights reserved.*
